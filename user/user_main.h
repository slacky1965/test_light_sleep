#ifndef USER_USER_MAIN_H_
#define USER_USER_MAIN_H_

/*
 *
*   SPI_FLASH_SIZE_MAP 0   512KB  (256KB+ 256KB)    0x41000
*   SPI_FLASH_SIZE_MAP 2   1024KB (512KB+ 512KB)    0x81000
*   SPI_FLASH_SIZE_MAP 3   2048KB (512KB+ 512KB)    0x81000
*   SPI_FLASH_SIZE_MAP 4   4096KB (512KB+ 512KB)    0x81000
*   SPI_FLASH_SIZE_MAP 5   2048KB (1024KB+1024KB)   0x101000
*   SPI_FLASH_SIZE_MAP 6   4096KB (1024KB+1024KB)   0x101000
*   SPI_FLASH_SIZE_MAP 7   4096KB (2048KB+2048KB)   ?
*   SPI_FLASH_SIZE_MAP 8   8192KB (1024KB+1024KB)   0x101000
*   SPI_FLASH_SIZE_MAP 9   16384KB(1024KB+1024KB)   0x101000
*
*/

#ifndef SPI_FLASH_SIZE_MAP
#define SPI_FLASH_SIZE_MAP 6
#endif

#ifndef OTA_FLASH_SIZE_K
#define OTA_FLASH_SIZE_K 4096
#endif

#if SPI_FLASH_SIZE_MAP == 3 || SPI_FLASH_SIZE_MAP == 6
#define FIRMWARE_POS      ((OTA_FLASH_SIZE_K/2)*1024/2)+0x1000
#define FIRMWARE_SIZE     ((OTA_FLASH_SIZE_K/2)*1024/2)-0x1000
#elif SPI_FLASH_SIZE_MAP == 4 || SPI_FLASH_SIZE_MAP == 8
#define FIRMWARE_POS      ((OTA_FLASH_SIZE_K/4)*1024/2)+0x1000
#define FIRMWARE_SIZE     ((OTA_FLASH_SIZE_K/4)*1024/2)-0x1000
#elif SPI_FLASH_SIZE_MAP == 9
#define FIRMWARE_POS      ((OTA_FLASH_SIZE_K/4)*1024/4)+0x1000
#define FIRMWARE_SIZE     ((OTA_FLASH_SIZE_K/4)*1024/4)-0x1000
#else
#define FIRMWARE_POS      ((OTA_FLASH_SIZE_K*1024)/2)+0x1000
#define FIRMWARE_SIZE     ((OTA_FLASH_SIZE_K*1024)/2)-0x1000
#endif

#if SPI_FLASH_SIZE_MAP == 0
#define INIT_DATA_POS   0x7C
#elif SPI_FLASH_SIZE_MAP == 2
#define INIT_DATA_POS   0xFC
#elif SPI_FLASH_SIZE_MAP == 3 || SPI_FLASH_SIZE_MAP == 5
#define INIT_DATA_POS   0x1FC
#elif SPI_FLASH_SIZE_MAP == 4 || SPI_FLASH_SIZE_MAP == 6
#define INIT_DATA_POS   0x3FC
#elif SPI_FLASH_SIZE_MAP == 8
#define INIT_DATA_POS   0x7FC
#elif SPI_FLASH_SIZE_MAP == 9
#define INIT_DATA_POS   0xFFC
#else
#error "The flash map is not supported"
#endif

#define INIT_DATA_LEN   128

typedef enum {
    GPIO0 = 0,
    GPIO1,
    GPIO2,
    GPIO3,
    GPIO4,
    GPIO5,
    GPIO6,
    GPIO7,
    GPIO8,
    GPIO9,
    GPIO10,
    GPIO11,
    GPIO12,
    GPIO13,
    GPIO14,
    GPIO15,
    GPIO16,
    GPIOMAX
} gpio_num_t;

#endif /* USER_USER_MAIN_H_ */
